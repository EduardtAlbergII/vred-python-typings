from vrNodePtr import NodePtr, vrNodePtr
from vrMaterialPtr import MaterialPtr
from math import Vec3f
from builtins import NoneType

__name__: str
__doc__: NoneType
__package__: str
__spec__: ModuleSpec

def __loader__(self) -> None: ...
def addChoiceControlPoint(self, node: NodePtr, time: float, value: int) -> bool: ...
def addChoiceControlPoints(self, node: NodePtr, times: list, values: list) -> bool: ...
def addRotationControlPoint(self, node: NodePtr, time: float, rot: Vec3f) -> bool: ...
def addRotationControlPoints(self, node: NodePtr, times: list, rots: list) -> bool: ...
def addRotationOrientationControlPoint(self, node: NodePtr, time: float, rot: Vec3f) -> bool: ...
def addRotationOrientationControlPoints(self, node: NodePtr, times: list, rots: list) -> bool: ...
def addScaleControlPoint(self, node: NodePtr, time: float, scale: Vec3f) -> bool: ...
def addScaleControlPoints(self, node: NodePtr, times: list, scales: list) -> bool: ...
def addToAnimClip(self, clip: vrNodePtr, object: vrNodePtr, frame: int) -> bool: ...
def addTranslationControlPoint(self, node: NodePtr, time: float, trans: Vec3f, updateGui: bool) -> bool: ...
def addTranslationControlPoints(self, node: NodePtr, times: list, trans: list, updateGui: bool) -> bool: ...
def addVisibleControlPoint(self, node: NodePtr, time: float, value: float) -> bool: ...
def addVisibleControlPoints(self, node: NodePtr, times: list, values: list) -> bool: ...
def animateClippingTransform(self) -> None: ...
def createAnimClip(self, name: str, parentClip: vrNodePtr) -> vrNodePtr: ...
def createAnimationBlockForMaterial(self, node: MaterialPtr, updateGui: bool) -> bool: ...
def createAnimationBlockForNode(self, node: NodePtr, updateGui: bool) -> bool: ...
def findAnimBlock(self, name: str) -> vrNodePtr: ...
def findAnimClip(self, name: str) -> vrNodePtr: ...
def findCameraTrackBlock(self) -> vrNodePtr: ...
def getAnimBlockNodes(self, includeHidden: bool) -> list: ...
def getAnimBlocks(self, includeHidden: bool) -> list: ...
def getAnimClipNodes(self) -> list: ...
def getAnimClips(self) -> list: ...
def getCurrentFrame(self) -> float: ...
def isPlaying(self) -> bool: ...
def keyAll(self) -> None: ...
def keySelected(self) -> None: ...
def pauseCAnimation(self) -> None: ...
def playAnim(self) -> None: ...
def playCAnimation(self, name: str) -> None: ...
def resetAnim(self, name: str) -> None: ...
def resetCAnimation(self, name: str) -> None: ...
def restoreAnimation(self, node: NodePtr) -> bool: ...
def restoreAnimations(self, nodes: list) -> bool: ...
def setAnimClipActive(self, clip: vrNodePtr, active: bool) -> None: ...
def setAnimClipDuration(self, clip: vrNodePtr, frames: int) -> None: ...
def setAnimClipEnd(self, clip: vrNodePtr, frame: int, keepStart: bool) -> None: ...
def setAnimClipFlipped(self, clip: vrNodePtr, flipped: bool) -> None: ...
def setAnimClipLocked(self, clip: vrNodePtr, locked: bool) -> None: ...
def setAnimClipStart(self, clip: vrNodePtr, frame: int, keepEnd: bool) -> None: ...
def setCurrentFrame(self, frame: float) -> None: ...
def stopAnim(self, name: str) -> None: ...
def trashAnimation(self, node: NodePtr) -> bool: ...
def trashAnimations(self, nodes: list) -> bool: ...
