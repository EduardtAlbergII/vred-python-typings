from vrNodePtr import NodePtr, vrNodePtr
from vrOSGTypes import Vec3f

__name__: str
__doc__: str
__package__: str
__spec__: ModuleSpec

def __loader__(self) -> None: ...
def addChilds(self, node: NodePtr, children: list) -> None: ...
def addNodeTag(self) -> None: ...
def addNodeTags(self) -> None: ...
def applyMaterial(self, nodes: list, mats: list, applyToMaterialGroupParent: bool, skipMaterialGroupChilds: bool) -> None: ...
def clearFindCache(self) -> None: ...
def cloneMirrorAxisNode(self, node: NodePtr, deep: bool, flush: bool, axis: Vec3f) -> None: ...
def cloneMirrorNode(self, node: NodePtr, deep: bool, flush: bool) -> None: ...
def cloneNode(self, node: NodePtr, deep: bool) -> vrNodePtr: ...
def convertCore(self, node: vrNodePtr, type: str) -> None: ...
def copyNode(self, node: NodePtr) -> bool: ...
def copyNodes(self, nodes: list) -> bool: ...
def copyTransformation(
    self,
    source: NodePtr,
    target: NodePtr,
    copyTranslation: bool,
    copyRotation: bool,
    copyScale: bool,
    copyRotatePivot: bool,
    copyScalePivot: bool,
    copyShearing: bool,
) -> None: ...
def createNode(self, type: str, name: str, parent: vrNodePtr) -> vrNodePtr: ...
def cutNode(self, node: NodePtr) -> bool: ...
def cutNodes(self, nodes: list) -> bool: ...
def deleteNode(self, node: NodePtr, force: bool) -> bool: ...
def deleteNodes(self, nodes: list, force: bool) -> bool: ...
def deselectAll(self) -> None: ...
def enableScenegraph(self, status: bool) -> None: ...
def findNode(self, node_name: str, regex: bool) -> vrNodePtr: ...
def findNodePath(self, node_path: str, regex: bool) -> vrNodePtr: ...
def findNodes(self, node_name: str, node_names: list, regex: bool) -> list: ...
def findUniquePath(self, unique_path: str) -> vrNodePtr: ...
def getAllNodes(self) -> list: ...
def getClipboard(self) -> list: ...
def getHeadlight(self) -> vrNodePtr: ...
def getInternalRootNode(self) -> vrNodePtr: ...
def getNodeID(self, name: str) -> int: ...
def getNodeName(self, node: NodePtr) -> str: ...
def getNodePath(self, node: NodePtr) -> str: ...
def getNodeTags(self, node: NodePtr) -> None: ...
def getNodesWithTag(self) -> None: ...
def getNodesWithTags(self) -> None: ...
def getRootNode(self) -> vrNodePtr: ...
def getSceneSwitches(self) -> list: ...
def getSelectedNode(self) -> vrNodePtr: ...
def getSelectedNodes(self) -> list: ...
def getSelectedRootNodes(self) -> list: ...
def getSuperRootNode(self) -> vrNodePtr: ...
def getTransformRootNode(self) -> vrNodePtr: ...
def getUniquePath(self, node: NodePtr) -> str: ...
def groupSelection(self) -> None: ...
def hasNodeTag(self, node: NodePtr, tag: str) -> None: ...
def hasNodeTags(self, node: NodePtr, tag: str) -> None: ...
def hideNode(self, node: NodePtr) -> None: ...
def hideNodes(self, nodes: list) -> None: ...
def ignoreAutoHeadlight(self) -> None: ...
def initFindCache(self) -> None: ...
def insertParentNode(self, node: NodePtr, newParent: NodePtr) -> None: ...
def invertSelection(self) -> None: ...
def invertSelectionInGroup(self) -> None: ...
def isCloned(self, node: NodePtr) -> None: ...
def macget(self) -> None: ...
def moveNode(self, node: NodePtr, from1: NodePtr, to: NodePtr) -> None: ...
def moveNodes(self, nodes: list, froms: list, tos: list) -> None: ...
def moveNodesAfter(self) -> None: ...
def pasteNode(self, node: NodePtr) -> None: ...
def pasteNodes(self, nodes: list) -> None: ...
def rebuildClones(self) -> None: ...
def removeNodeTag(self) -> None: ...
def removeNodeTags(self) -> None: ...
def removeSelectedNodes(self, nodes: list) -> None: ...
def replaceNodeTag(self) -> None: ...
def selectAll(self) -> None: ...
def selectNode(self, node: NodePtr, name: str, status: bool) -> None: ...
def selectNodes(self, nodes: list, status: bool) -> None: ...
def selectNodesNoUndo(self, nodes: list, status: bool) -> None: ...
def selectParent(self) -> None: ...
def setBoundingBoxSelection(self, enabled: bool) -> None: ...
def setIgnoreMaterialGroup(self) -> None: ...
def setSwitchChoiceByTag(self, node: NodePtr, tags: str) -> None: ...
def setSwitchChoiceByTags(self, node: NodePtr, tags: str) -> None: ...
def showComponents(self, enabled: bool) -> None: ...
def showNode(self, node: NodePtr) -> None: ...
def showNodes(self, nodes: list) -> None: ...
def showScenegraph(self, status: bool) -> None: ...
def splitGeometryTris(self) -> None: ...
def subChilds(self, node: NodePtr, children: list) -> None: ...
def uncreateNode(self, node: vrNodePtr, type: str, name: str, parent: vrNodePtr) -> None: ...
def undeleteNode(self, node: NodePtr) -> None: ...
def undeleteNodes(self, nodes: list) -> None: ...
def unshareNode(self, node: NodePtr) -> vrNodePtr: ...
def unsplitGeometryTris(self) -> None: ...
def updateScenegraph(self, force: bool) -> None: ...
