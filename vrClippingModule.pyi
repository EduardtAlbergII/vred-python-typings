from builtins import NoneType
from vrOSGTypes import Vec3f, Pnt3f

__name__: str
__doc__: NoneType
__package__: str
__spec__: ModuleSpec

def __loader__(self) -> None: ...
def cloneClippingContour(self) -> None: ...
def enableClippingPlane(self, state: bool) -> None: ...
def getClippingContourColor(self) -> Vec3f: ...
def getClippingContourWidth(self) -> int: ...
def getClippingGridColor(self) -> Vec3f: ...
def getClippingHideScene(self) -> bool: ...
def getClippingPlaneColor(self) -> Vec3f: ...
def getClippingPlaneInvertDirection(self) -> bool: ...
def getClippingPlaneNormal(self) -> Vec3f: ...
def getClippingPlanePosition(self) -> Pnt3f: ...
def getClippingPlaneState(self) -> bool: ...
def getClippingShowContour(self) -> bool: ...
def getClippingShowGrid(self) -> bool: ...
def getClippingShowManipulator(self) -> bool: ...
def getClippingShowPlane(self) -> bool: ...
def setClippingContourVisualization(self, state: bool, color: Vec3f, width: int) -> None: ...
def setClippingGridVisualization(self, state: bool, color: Vec3f) -> None: ...
def setClippingHideScene(self, state: bool) -> None: ...
def setClippingPlane(self, position: Pnt3f, normal: Vec3f, flipped: bool) -> None: ...
def setClippingPlanePosition(self, position: Pnt3f) -> None: ...
def setClippingPlaneQuaternionRotation(self, axis: Vec3f, angle: float) -> None: ...
def setClippingPlaneRotation(self, rotationX: float, rotationY: float, rotationZ: float) -> None: ...
def setClippingPlaneVisualization(self, state: bool, color: Vec3f) -> None: ...
def setClippingShowManipulator(self, state: bool) -> None: ...
