from vrOSGTypes import Color3f, Color4f, Pnt3f
from vrNodePtr import vrNodePtr

__name__: str
__doc__: str
__package__: str
__spec__: ModuleSpec
VR_ANNOTATION_DYNAMIC_SCALING_OFF: int
VR_ANNOTATION_DYNAMIC_SCALING_NEAR: int
VR_ANNOTATION_DYNAMIC_SCALING_FAR: int

def __loader__(self) -> None: ...

class vrAnnotationPtr:
    __module__: str
    __doc__: str
    __instance_size__: int
    def __class__(self) -> None: ...
    def __delattr__(self) -> None: ...
    def __dir__(self, /): ...
    def __eq__(self) -> None: ...
    def __format__(self, format_spec, /): ...
    def __ge__(self) -> None: ...
    def __getattribute__(self) -> None: ...
    def __getstate__(self, /): ...
    def __gt__(self) -> None: ...
    def __hash__(self) -> None: ...
    def __init__(self) -> None: ...
    def __init_subclass__(cls) -> None: ...
    def __le__(self) -> None: ...
    def __lt__(self) -> None: ...
    def __ne__(self) -> None: ...
    def __new__(cls) -> None: ...
    def __reduce__(self) -> None: ...
    def __reduce_ex__(self, protocol, /): ...
    def __repr__(self) -> None: ...
    def __setattr__(self) -> None: ...
    def __sizeof__(self, /): ...
    def __str__(self) -> None: ...
    def __subclasshook__(self) -> None: ...
    def getBackgroundColor(self) -> Color4f: ...
    def getDynamicScalingMode(self) -> int: ...
    def getFontColor(self) -> Color3f: ...
    def getLineColor(self) -> Color3f: ...
    def getName(self) -> str: ...
    def getNode(self) -> vrNodePtr: ...
    def getPosition(self) -> Pnt3f: ...
    def getSize(self) -> float: ...
    def getText(self) -> str: ...
    def getUseNodeVisibility(self) -> bool: ...
    def isVisible(self) -> bool: ...
    def setBackgroundColor(self, color: Color4f) -> None: ...
    def setDynamicScalingMode(self, mode: int) -> None: ...
    def setFontColor(self, color: Color3f) -> None: ...
    def setLineColor(self, color: Color3f) -> None: ...
    def setName(self, name: str) -> None: ...
    def setNode(self, node: vrNodePtr) -> None: ...
    def setPosition(self, position: Pnt3f) -> None: ...
    def setSize(self, size: float) -> None: ...
    def setText(self, text: str) -> None: ...
    def setUseNodeVisibility(self, enabled: bool) -> None: ...
    def setVisible(self, visible: bool) -> None: ...
    def zoomTo(self) -> None: ...
