from builtins import NoneType
from vrFieldAccess import FieldContainerPtr, vrFieldAccess
from vrMaterialPtr import vrMaterialPtr

__name__: str
__doc__: NoneType
__package__: str
__spec__: ModuleSpec

def __loader__(self) -> None: ...
def createLight(type: str) -> None: ...
def toNode(id: int) -> vrNodePtr: ...

class NodePtr:
    __module__: str
    __doc__: NoneType
    __instance_size__: int
    def __class__(self) -> None: ...
    def __delattr__(self) -> None: ...
    def __dir__(self, /): ...
    def __eq__(self) -> None: ...
    def __format__(self, format_spec, /): ...
    def __ge__(self) -> None: ...
    def __getattribute__(self) -> None: ...
    def __getstate__(self, /): ...
    def __gt__(self) -> None: ...
    def __hash__(self) -> None: ...
    def __init__(self) -> None: ...
    def __init_subclass__(cls) -> None: ...
    def __le__(self) -> None: ...
    def __lt__(self) -> None: ...
    def __ne__(self) -> None: ...
    def __new__(cls) -> None: ...
    def __reduce__(self) -> None: ...
    def __reduce_ex__(self, protocol, /): ...
    def __repr__(self) -> None: ...
    def __setattr__(self) -> None: ...
    def __sizeof__(self, /): ...
    def __str__(self) -> None: ...
    def __subclasshook__(self) -> None: ...

class vrNodePtr(NodePtr):
    __module__: str
    __doc__: str
    __instance_size__: int
    def __class__(self) -> None: ...
    def __delattr__(self) -> None: ...
    def __dir__(self, /): ...
    def __eq__(self) -> None: ...
    def __format__(self, format_spec, /): ...
    def __ge__(self) -> None: ...
    def __getattribute__(self) -> None: ...
    def __getstate__(self, /): ...
    def __gt__(self) -> None: ...
    def __hash__(self) -> None: ...
    def __init__(self, source: int) -> None: ...
    def __init_subclass__(cls) -> None: ...
    def __le__(self) -> None: ...
    def __lt__(self) -> None: ...
    def __ne__(self) -> None: ...
    def __new__(cls) -> None: ...
    def __reduce__(self) -> None: ...
    def __reduce_ex__(self, protocol, /): ...
    def __repr__(self) -> None: ...
    def __setattr__(self) -> None: ...
    def __sizeof__(self, /): ...
    def __str__(self) -> None: ...
    def __subclasshook__(self) -> None: ...
    def addAttachment(self, attachment: FieldContainerPtr) -> bool: ...
    def addChild(self, node: vrNodePtr) -> None: ...
    def changeLightType(self, type: str) -> None: ...
    def clone(self) -> vrNodePtr: ...
    def copy(self) -> vrNodePtr: ...
    def deleteRayFile(self) -> None: ...
    def fields(self) -> vrFieldAccess: ...
    def getActive(self) -> bool: ...
    def getAreaLightInteractiveQuality(self) -> int: ...
    def getAreaLightPrimaryVisibility(self) -> bool: ...
    def getAreaLightStillFrameQuality(self) -> int: ...
    def getAreaLightUseConeAngle(self) -> bool: ...
    def getAreaLightVisibleInReflections(self) -> bool: ...
    def getAttachment(self, aname: str) -> FieldContainerPtr: ...
    def getAttribute(self, key: str) -> str: ...
    def getBoundingBox(self) -> list: ...
    def getCastShadowOnShadowMaterial(self) -> bool: ...
    def getCenter(self) -> list: ...
    def getChild(self, id: int) -> vrNodePtr: ...
    def getDiffuseLightColor(self) -> list: ...
    def getDlistCache(self) -> bool: ...
    def getGlossyLightColor(self) -> list: ...
    def getGroundShadowIntensity(self) -> float: ...
    def getID(self) -> int: ...
    def getIlluminateShadowMaterial(self) -> bool: ...
    def getLightConeAngle(self) -> float: ...
    def getLightImportanceMultiplier(self) -> float: ...
    def getLightIntensity(self) -> float: ...
    def getLightPenumbraAngle(self) -> float: ...
    def getLightTemperature(self) -> int: ...
    def getLightVisualizationScale(self) -> float: ...
    def getLightVisualizationVisible(self) -> bool: ...
    def getLocalTranslation(self) -> list: ...
    def getMaterial(self) -> vrMaterialPtr: ...
    def getNChildren(self) -> int: ...
    def getName(self) -> str: ...
    def getNormals(self) -> list: ...
    def getParent(self) -> vrNodePtr: ...
    def getPositions(self) -> list: ...
    def getPtr(self) -> NodePtr: ...
    def getRayFileUsePhotonsForDirectLighting(self) -> bool: ...
    def getRayFileUseRandomSampling(self) -> bool: ...
    def getRayFileVisualizationRayCount(self) -> int: ...
    def getRayFileVisualizationRayLength(self) -> float: ...
    def getRotation(self) -> list: ...
    def getScale(self) -> list: ...
    def getShadowIntensity(self) -> float: ...
    def getShadowMapFilterRadius(self) -> float: ...
    def getShadowMapResolution(self) -> int: ...
    def getTexCoords(self) -> list: ...
    def getTranslation(self) -> list: ...
    def getType(self) -> str: ...
    def getUseIESProfile(self) -> bool: ...
    def getUseLightTemperature(self) -> bool: ...
    def getVBO(self) -> bool: ...
    def getWorldRotation(self) -> list: ...
    def getWorldScale(self) -> list: ...
    def getWorldTransform(self) -> list: ...
    def getWorldTranslation(self) -> list: ...
    def hasAttachment(self, fname: str) -> bool: ...
    def hasAttribute(self, key: str) -> bool: ...
    def isAreaLight(self) -> bool: ...
    def isAsset(self) -> bool: ...
    def isDirectionalLight(self) -> bool: ...
    def isDiskLight(self) -> bool: ...
    def isLight(self) -> bool: ...
    def isLightOn(self) -> bool: ...
    def isLocalLight(self) -> bool: ...
    def isPointLight(self) -> bool: ...
    def isRayFileLight(self) -> bool: ...
    def isRectangularLight(self) -> bool: ...
    def isSphericalLight(self) -> bool: ...
    def isSpotLight(self) -> bool: ...
    def isTransform(self) -> bool: ...
    def isValid(self) -> bool: ...
    def loadIESProfile(self, filename: str) -> None: ...
    def loadRayFile(self, filename: str) -> None: ...
    def makeComponentTransform(self) -> None: ...
    def makeTransform(self, search: bool) -> None: ...
    def removeAssetManagerReference(self, nodes: list) -> None: ...
    def removeAttribute(self, key: str) -> None: ...
    def setActive(self, state: bool) -> None: ...
    def setAreaLightInteractiveQuality(self, quality: int) -> None: ...
    def setAreaLightPrimaryVisibility(self, state: bool) -> None: ...
    def setAreaLightStillFrameQuality(self, quality: int) -> None: ...
    def setAreaLightUseConeAngle(self, state: bool) -> None: ...
    def setAreaLightVisibleInReflections(self, state: bool) -> None: ...
    def setAttribute(self, key: str, value: str) -> None: ...
    def setAxisRotation(self, axis: vrNodePtr, ax: float, ay: float, az: float, bx: float, by: float, bz: float, alpha: float) -> None: ...
    def setCastShadowOnShadowMaterial(self, state: bool) -> None: ...
    def setDiffuseLightColor(self, r: float, g: float, b: float) -> None: ...
    def setDlistCache(self, state: bool) -> None: ...
    def setFieldbool(self) -> None: ...
    def setFieldColor4f(self) -> None: ...
    def setFieldInt16(self) -> None: ...
    def setFieldint(self) -> None: ...
    def setFieldNode(self) -> None: ...
    def setFieldPnt2f(self) -> None: ...
    def setFieldPnt3f(self) -> None: ...
    def setFieldfloat(self) -> None: ...
    def setFieldString(self) -> None: ...
    def setFieldUInt16(self) -> None: ...
    def setFieldUint(self) -> None: ...
    def setFieldVec2f(self) -> None: ...
    def setFieldVec3f(self) -> None: ...
    def setFieldVec4f(self) -> None: ...
    def setGlossyLightColor(self, r: float, g: float, b: float) -> None: ...
    def setGroundShadowIntensity(self, value: float) -> None: ...
    def setIlluminateShadowMaterial(self, state: bool) -> None: ...
    def setLightConeAngle(self, value: float) -> None: ...
    def setLightImportanceMultiplier(self, value: float) -> None: ...
    def setLightIntensity(self, value: float) -> None: ...
    def setLightOn(self, state: bool) -> None: ...
    def setLightPenumbraAngle(self, value: float) -> None: ...
    def setLightTemperature(self, kelvin: int) -> None: ...
    def setLightVisualizationScale(self, scale: float) -> None: ...
    def setLightVisualizationVisible(self, state: bool) -> None: ...
    def setLocalLight(self, state: bool) -> None: ...
    def setLocalTranslation(self, x: float, y: float, z: float) -> None: ...
    def setMaterial(self, mat: vrMaterialPtr) -> None: ...
    def setName(self, name: str) -> None: ...
    def setNormals(self, normals: list) -> None: ...
    def setPositions(self, positions: list) -> None: ...
    def setRayFileUsePhotonsForDirectLighting(self, state: bool) -> None: ...
    def setRayFileUseRandomSampling(self, state: bool) -> None: ...
    def setRayFileVisualizationRayCount(self, count: int) -> None: ...
    def setRayFileVisualizationRayLength(self, length: float) -> None: ...
    def setRotation(self, x: float, y: float, z: float) -> None: ...
    def setScale(self, x: float, y: float, z: float) -> None: ...
    def setShadowIntensity(self, value: float) -> None: ...
    def setShadowMapFilterRadius(self, radius: float) -> None: ...
    def setShadowMapResolution(self, resolution: int) -> None: ...
    def setTexCoords(self, texCoords: list) -> None: ...
    def setTransformMatrix(self, matrix: list, transposed: bool) -> None: ...
    def setTranslation(self, x: float, y: float, z: float) -> None: ...
    def setTransparency(self, t: float) -> None: ...
    def setUseIESProfile(self, state: bool) -> None: ...
    def setUseLightTemperature(self, state: bool) -> None: ...
    def setVBO(self, state: bool) -> None: ...
    def setWorldTranslation(self, x: float, y: float, z: float) -> None: ...
    def sub(self) -> None: ...
    def subAttachment(self, attachment: FieldContainerPtr) -> bool: ...
    def subChild(self, node: vrNodePtr) -> None: ...
    def toggleLight(self) -> None: ...
